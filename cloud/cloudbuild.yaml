# Cloud Build configuration for automated deployment
steps:
  # Build PostgreSQL image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'cloud/Dockerfile.postgres', '-t', 'gcr.io/$PROJECT_ID/postgres:$COMMIT_SHA', '.']
    
  # Build FastAPI image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'cloud/Dockerfile.backend', '-t', 'gcr.io/$PROJECT_ID/finreview-app:$COMMIT_SHA', '.']
    
  # Push PostgreSQL image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/postgres:$COMMIT_SHA']
    
  # Push FastAPI image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/finreview-app:$COMMIT_SHA']
    
  # Deploy PostgreSQL to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'postgres-service'
      - '--image'
      - 'gcr.io/$PROJECT_ID/postgres:$COMMIT_SHA'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '5432'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '5'
      - '--set-env-vars'
      - 'POSTGRES_DB=finreview,POSTGRES_USER=finreview_user,POSTGRES_PASSWORD=FlhugG77XDC1_0SlYUfhuzd-TkEySuwTtYFcV3luIh0'
      
  # Wait for PostgreSQL and get its URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Waiting for PostgreSQL service to be ready..."
        sleep 30
        echo "Getting PostgreSQL service URL..."
        POSTGRES_URL=$$(gcloud run services describe postgres-service --region=europe-west1 --format="value(status.url)")
        echo "PostgreSQL URL: $$POSTGRES_URL"
        # Remove https:// and any path to get just the hostname
        POSTGRES_HOST=$$(echo $$POSTGRES_URL | sed 's|https://||' | sed 's|/.*||')
        echo "PostgreSQL hostname: $$POSTGRES_HOST"
        # Store the hostname for the next step
        echo "POSTGRES_HOST=$$POSTGRES_HOST" >> /workspace/postgres_host.env
        echo "PostgreSQL should be ready now"
      
  # Deploy FastAPI to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        source /workspace/postgres_host.env
        echo "Using PostgreSQL hostname: $$POSTGRES_HOST"
        DATABASE_URL="postgresql://finreview_user:FlhugG77XDC1_0SlYUfhuzd-TkEySuwTtYFcV3luIh0@$$POSTGRES_HOST:5432/finreview"
        echo "Database URL: $$DATABASE_URL"
        
        gcloud run deploy finreview-app \
          --image gcr.io/$PROJECT_ID/finreview-app:$COMMIT_SHA \
          --region europe-west1 \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10 \
          --timeout 900 \
          --set-env-vars DATABASE_URL="$$DATABASE_URL" \
          --set-env-vars ENVIRONMENT=production \
          --set-env-vars FRONTEND_URL=https://finreview-app.web.app \
          --set-secrets GOOGLE_CLIENT_ID=google-client-id:latest,GOOGLE_CLIENT_SECRET=google-client-secret:latest,JWT_SECRET_KEY=jwt-secret-key:latest

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/finreview-app:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/postgres:$COMMIT_SHA'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY
